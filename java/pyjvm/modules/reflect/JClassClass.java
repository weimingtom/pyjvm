// AUTOGENERATED by exporter.py from JClass.java
package pyjvm.modules.reflect;

import pyjvm.*;

public final class JClassClass extends Type {
	private JClassClass() {}

	public static final StringDict dict;
	public static final JClassClass instance = new JClassClass();
	public static final Obj constructor = null;
	
	static {
		if("JClass".equals("NativeObj") || "JClass".equals("UserObj"))
			dict = new StringDict();
		else
			dict = NativeObjClass.dict.copy();
		
		dict.put("create", new Method() {
			public Obj callMethod(Obj self, Obj[] args) {
				// direct
				return ((JClass)self).create(args);
			}
		});
	}
	public final StringDict getDict() {
		return dict;
	}
	public final Obj getEntry(int name) {
		return dict.get(name);
	}
	public final Obj call(Obj[] args) {
		if(constructor == null)
			throw new ScriptError(ScriptError.TypeError, "Object uninitializable");
		return constructor.call(args);
	}
}
